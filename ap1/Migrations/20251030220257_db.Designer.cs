// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.Data;

#nullable disable

namespace POS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251030220257_db")]
    partial class db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("POS.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("POS.Models.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PrecioTiempoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PrecioTiempoId");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("POS.Models.ComboProducto", b =>
                {
                    b.Property<int>("ComboId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.HasKey("ComboId", "ProductoId");

                    b.HasIndex("ComboId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ComboProductos");
                });

            modelBuilder.Entity("POS.Models.CorteCaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Diferencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EfectivoEsperado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EfectivoFinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EfectivoInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("EstaCerrado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalDepositos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRetiros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVentasEfectivo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVentasTarjeta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UsuarioCierre")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EstaCerrado");

                    b.HasIndex("FechaApertura");

                    b.HasIndex("FechaCierre");

                    b.ToTable("CorteCajas");
                });

            modelBuilder.Entity("POS.Models.DetalleVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemReferenciaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreItem")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoItem")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VentaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ItemReferenciaId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TipoItem");

                    b.HasIndex("VentaId");

                    b.ToTable("DetallesVenta");
                });

            modelBuilder.Entity("POS.Models.MovimientoCaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("CorteCajaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoMovimiento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Usuario")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CorteCajaId");

                    b.HasIndex("Fecha");

                    b.HasIndex("TipoMovimiento");

                    b.ToTable("MovimientosCaja");
                });

            modelBuilder.Entity("POS.Models.PrecioTiempo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Minutos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Orden")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PrecioTiempo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "",
                            Estado = "Activo",
                            Minutos = 60,
                            Nombre = "1 hora",
                            Orden = 1,
                            Precio = 100.00m
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "",
                            Estado = "Activo",
                            Minutos = 80,
                            Nombre = "80 minutos",
                            Orden = 2,
                            Precio = 130.00m
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "",
                            Estado = "Activo",
                            Minutos = 120,
                            Nombre = "2 horas",
                            Orden = 3,
                            Precio = 165.00m
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "",
                            Estado = "Activo",
                            Minutos = 140,
                            Nombre = "140 minutos",
                            Orden = 4,
                            Precio = 180.00m
                        });
                });

            modelBuilder.Entity("POS.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("Estado");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("POS.Models.Tiempo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraEntrada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("HoraSalida")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdNfc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Estado");

                    b.HasIndex("IdNfc");

                    b.ToTable("Tiempo", (string)null);
                });

            modelBuilder.Entity("POS.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("HoraEntrada")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdNfc")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MinutosTiempoCombo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Estado");

                    b.HasIndex("IdNfc");

                    b.HasIndex("TipoPago");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("POS.Models.Combo", b =>
                {
                    b.HasOne("POS.Models.PrecioTiempo", "PrecioTiempo")
                        .WithMany()
                        .HasForeignKey("PrecioTiempoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PrecioTiempo");
                });

            modelBuilder.Entity("POS.Models.ComboProducto", b =>
                {
                    b.HasOne("POS.Models.Combo", "Combo")
                        .WithMany("ComboProductos")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POS.Models.Producto", "Producto")
                        .WithMany("ComboProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("POS.Models.DetalleVenta", b =>
                {
                    b.HasOne("POS.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("POS.Models.Venta", "Venta")
                        .WithMany("DetallesVenta")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("POS.Models.MovimientoCaja", b =>
                {
                    b.HasOne("POS.Models.CorteCaja", "CorteCaja")
                        .WithMany()
                        .HasForeignKey("CorteCajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorteCaja");
                });

            modelBuilder.Entity("POS.Models.Producto", b =>
                {
                    b.HasOne("POS.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("POS.Models.Combo", b =>
                {
                    b.Navigation("ComboProductos");
                });

            modelBuilder.Entity("POS.Models.Producto", b =>
                {
                    b.Navigation("ComboProductos");
                });

            modelBuilder.Entity("POS.Models.Venta", b =>
                {
                    b.Navigation("DetallesVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
